<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="BrushResources.xaml" />
  </ResourceDictionary.MergedDictionaries>

    <!-- Styles -->

  <!-- Style for the tooltip - Show border and content -->
  <Style TargetType="{x:Type ToolTip}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border Background="#698390" Opacity="0.95" Margin="2" CornerRadius="3" Padding="5" BorderBrush="Black" BorderThickness="1" >
            <ContentPresenter Margin="10,5,10,5" 
                HorizontalAlignment="Center" VerticalAlignment="Center"                   
                TextBlock.Foreground="Black" TextBlock.FontSize="12" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontStyle" Value="Italic" />
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Placement" Value="Top" />
    <Setter Property="HorizontalOffset" Value="20" />
  </Style>
  <!-- Style for the Listbox items - Show border and content -->
  <Style TargetType="ListBoxItem" x:Key="SongsItemContainerStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border x:Name="outsideBorder" Background="#FDF356" Margin="2" CornerRadius="3" Padding="5" BorderBrush="Black" BorderThickness="1" >
            <ContentPresenter Margin="2" RecognizesAccessKey="True" HorizontalAlignment="Stretch"/>
          </Border>
          <!-- Trigger when item is selected - change border stroke and background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True" >
              <Setter TargetName="outsideBorder" Property="Background" Value="#FBA23A"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- TextBox Style -->
  <Style TargetType="{x:Type TextBox}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" 
               BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
               CornerRadius="3" Padding="1">
            <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
              <Setter Property="BorderBrush" TargetName="Bd" Value="Red"/>
              <Setter Property="Background" TargetName="Bd" Value="LightGoldenrodYellow"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Simple Radio Button -->
  <Style TargetType="{x:Type RadioButton}" >
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Margin" Value="10,5" />
    <Setter Property="Foreground" Value="Yellow" />
    <Setter Property="Padding" Value="5,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">

          <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Grid Width="13" Height="13">
                <Ellipse x:Name="Ellipse_Border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                <Ellipse Margin="4" x:Name="CheckMark" Fill="{DynamicResource GlyphBrush}"/>
              </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
          </BulletDecorator>

          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
              <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse_Border"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Ellipse_Border"/>
              <Setter Property="Stroke" Value="{DynamicResource GlyphBrush}" TargetName="Ellipse_Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse_Border"/>
              <Setter Property="Stroke" Value="#40000000" TargetName="Ellipse_Border"/>
              <Setter Property="Foreground" Value="#80000000"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>